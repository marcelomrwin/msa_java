<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.redhat.examples.wfswarm</groupId>
	<artifactId>hola-wildflyswarm</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>

	<properties>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<version.wildfly-swarm>2018.4.1</version.wildfly-swarm>
		<hystrix.version>1.5.12</hystrix.version>
		<deltaspike.version>1.8.1</deltaspike.version>
		<fabric8.version>2.3.7</fabric8.version>
		<ribbon.version>2.3.0</ribbon.version>
		<kubeflix.version>1.0.28</kubeflix.version>

		<!-- Docker -->
		<docker.maven.plugin.version>0.25.2</docker.maven.plugin.version>
		<docker.from>fabric8/java-jboss-openjdk8-jdk:1.4.0</docker.from>
		<docker.image>fabric8/${project.artifactId}:${project.version}</docker.image>
		<docker.port.container.http>8080</docker.port.container.http>
		<docker.port.container.jolokia>8778</docker.port.container.jolokia>

		<!-- Fabric8/Kubernetes/OpenShift -->
		<fabric8.readinessProbe.httpGet.path>/api/hola</fabric8.readinessProbe.httpGet.path>
		<fabric8.readinessProbe.httpGet.port>8080</fabric8.readinessProbe.httpGet.port>
		<fabric8.readinessProbe.initialDelaySeconds>5</fabric8.readinessProbe.initialDelaySeconds>
		<fabric8.readinessProbe.timeoutSeconds>30</fabric8.readinessProbe.timeoutSeconds>
		<fabric8.service.name>hola-wildflyswarm</fabric8.service.name>
		<fabric8.service.port>80</fabric8.service.port>
		<fabric8.service.containerPort>8080</fabric8.service.containerPort>
		<fabric8.service.type>LoadBalancer</fabric8.service.type>
		<fabric8.label.group>msa</fabric8.label.group>
		<fabric8.iconRef>icons/java</fabric8.iconRef>

		<fabric8.env.AB_JOLOKIA_OFF>true</fabric8.env.AB_JOLOKIA_OFF>
		<fabric8.env.AB_OFF>true</fabric8.env.AB_OFF>
		<fabric8.env.GREETING_BACKEND_SERVICE_HOST>backend</fabric8.env.GREETING_BACKEND_SERVICE_HOST>
		<fabric8.env.GREETING_BACKEND_SERVICE_PORT>80</fabric8.env.GREETING_BACKEND_SERVICE_PORT>
		<fabric8.env.USE_KUBERNETES_DISCOVERY>true</fabric8.env.USE_KUBERNETES_DISCOVERY>
		<fabric8.serviceAccount>ribbon</fabric8.serviceAccount>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>bom</artifactId>
				<version>${version.wildfly-swarm}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>7.0</version>
				<scope>provided</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>cdi</artifactId>
		</dependency>
		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>jaxrs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-api</artifactId>
			<version>${deltaspike.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.deltaspike.core</groupId>
			<artifactId>deltaspike-core-impl</artifactId>
			<version>${deltaspike.version}</version>
		</dependency>
		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>monitor</artifactId>
			<version>${version.wildfly-swarm}</version>
		</dependency>
		<dependency>
			<groupId>com.netflix.hystrix</groupId>
			<artifactId>hystrix-core</artifactId>
			<version>${hystrix.version}</version>
		</dependency>

		<dependency>
			<groupId>org.wildfly.swarm</groupId>
			<artifactId>ribbon</artifactId>
		</dependency>
		<dependency>
			<groupId>io.fabric8.kubeflix</groupId>
			<artifactId>ribbon-discovery</artifactId>
			<version>${kubeflix.version}</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>hola-wildflyswarm</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.2.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.wildfly.swarm</groupId>
				<artifactId>wildfly-swarm-plugin</artifactId>
				<version>${version.wildfly-swarm}</version>
				<executions>
					<execution>
						<goals>
							<goal>package</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<properties>
						<swarm.context.path>/</swarm.context.path>
					</properties>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>${docker.maven.plugin.version}</version>
				<configuration>
					<images>
						<image>
							<name>${docker.image}</name>
							<build>
								<from>${docker.from}</from>
								<assembly>
									<basedir>/deployments</basedir>
									<inline>
										<id>${project.artifactId}</id>
										<files>
											<file>
												<source>${project.build.directory}/${project.build.finalName}-swarm.jar</source>
												<outputDirectory>/</outputDirectory>
											</file>
										</files>
									</inline>
								</assembly>
								<env>
									<JAVA_APP_JAR>${project.build.finalName}-swarm.jar</JAVA_APP_JAR>
								</env>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-maven-plugin</artifactId>
				<version>${fabric8.version}</version>
				<executions>
					<execution>
						<id>json</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>json</goal>
						</goals>
					</execution>
					<execution>
						<id>attach</id>
						<phase>package</phase>
						<goals>
							<goal>attach</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>f8-build</id>
			<build>
				<defaultGoal>clean install docker:build fabric8:json</defaultGoal>
			</build>
		</profile>
		<profile>
			<id>f8-deploy</id>
			<build>
				<defaultGoal>clean install docker:build docker:push fabric8:json fabric8:apply</defaultGoal>
			</build>
			<properties>
				<fabric8.recreate>true</fabric8.recreate>
				<fabric8.imagePullPolicySnapshot>Always</fabric8.imagePullPolicySnapshot>
			</properties>
		</profile>
		<profile>
			<id>f8-local-deploy</id>
			<build>
				<defaultGoal>clean install docker:build fabric8:json fabric8:apply</defaultGoal>
			</build>
			<properties>
				<fabric8.recreate>true</fabric8.recreate>
			</properties>
		</profile>
	</profiles>

</project>
